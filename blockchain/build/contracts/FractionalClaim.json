{
  "contractName": "FractionalClaim",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "funded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimState",
      "outputs": [
        {
          "internalType": "enum FractionalClaim.ClaimState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "funds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"funded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimState\",\"outputs\":[{\"internalType\":\"enum FractionalClaim.ClaimState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"funds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FractionalClaim.sol\":\"FractionalClaim\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/FractionalClaim.sol\":{\"keccak256\":\"0x0c3c193f5c1c7395d321f928052c63b30b808d0f972585d03933b45a8393b211\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7c6ce8436433303a05ed25d62f243759b11d3cc0ece26cb6840e8a504e84d71\",\"dweb:/ipfs/QmQ7c3wpNPHvD7o8XfAPtuGUVB2uqN4DD3fF7ctU5bBHK8\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106ee3803806106ee83398101604081905261002f91610118565b6040516331a9108f60e11b81526004810182905282903390839082906001600160a01b03851690636352211e90602401602060405180830381865afa15801561007c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a09190610144565b6001600160a01b0316146100b357600080fd5b600180546001600160a01b0387166001600160a01b03199182161790915560008054909116331781556002805460ff60a01b1916600160a01b8302179055505050505050610166565b80516001600160a01b038116811461011357600080fd5b919050565b6000806040838503121561012b57600080fd5b610134836100fc565b9150602083015190509250929050565b60006020828403121561015657600080fd5b61015f826100fc565b9392505050565b610579806101756000396000f3fe60806040526004361061007b5760003560e01c80639a7258091161004e5780639a725809146101165780639d76ea5814610144578063aad3ec9614610164578063c89f2ce41461017757600080fd5b8063047fc9aa1461008057806323024408146100a95780635bf8633a146100be5780638f84aa09146100f6575b600080fd5b34801561008c57600080fd5b5061009660045481565b6040519081526020015b60405180910390f35b6100bc6100b7366004610463565b61018d565b005b3480156100ca57600080fd5b506001546100de906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b34801561010257600080fd5b506000546100de906001600160a01b031681565b34801561012257600080fd5b5060025461013790600160a01b900460ff1681565b6040516100a09190610494565b34801561015057600080fd5b506002546100de906001600160a01b031681565b6100bc6101723660046104bc565b610287565b34801561018357600080fd5b5061009660035481565b60008060028054600160a01b900460ff16908111156101ae576101ae61047e565b146101b857600080fd5b6000546001600160a01b031633146101cf57600080fd5b34600355600280546001600160a01b0384166001600160a81b03199091168117600160a01b17909155604080516318160ddd60e01b815290516318160ddd916004808201926020929091908290030181865afa158015610233573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025791906104e6565b6004556040517ff3a504f28a34fdf555994a3bdfd3dc29f822e8684a9ef01001afb738cc3cdd0a90600090a15050565b60025482906001600160a01b038083169116146102a357600080fd5b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303816000875af11580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a91906104ff565b50604051630852cd8d60e31b8152600481018390526001600160a01b038416906342966c6890602401600060405180830381600087803b15801561035d57600080fd5b505af1158015610371573d6000803e3d6000fd5b50506004543392506108fc9150610389908590610434565b6040518115909202916000818181858888f193505050501580156103b1573d6000803e3d6000fd5b50826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041491906104e6565b60000361042f576002805460ff60a01b1916600160a11b1790555b505050565b60006104408284610521565b9392505050565b80356001600160a01b038116811461045e57600080fd5b919050565b60006020828403121561047557600080fd5b61044082610447565b634e487b7160e01b600052602160045260246000fd5b60208101600383106104b657634e487b7160e01b600052602160045260246000fd5b91905290565b600080604083850312156104cf57600080fd5b6104d883610447565b946020939093013593505050565b6000602082840312156104f857600080fd5b5051919050565b60006020828403121561051157600080fd5b8151801515811461044057600080fd5b60008261053e57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220ff07b61a5eec6e16b293ae536cb19308bb62351fa73268bbcba2cd9de0c53c2064736f6c634300080f0033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639a7258091161004e5780639a725809146101165780639d76ea5814610144578063aad3ec9614610164578063c89f2ce41461017757600080fd5b8063047fc9aa1461008057806323024408146100a95780635bf8633a146100be5780638f84aa09146100f6575b600080fd5b34801561008c57600080fd5b5061009660045481565b6040519081526020015b60405180910390f35b6100bc6100b7366004610463565b61018d565b005b3480156100ca57600080fd5b506001546100de906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b34801561010257600080fd5b506000546100de906001600160a01b031681565b34801561012257600080fd5b5060025461013790600160a01b900460ff1681565b6040516100a09190610494565b34801561015057600080fd5b506002546100de906001600160a01b031681565b6100bc6101723660046104bc565b610287565b34801561018357600080fd5b5061009660035481565b60008060028054600160a01b900460ff16908111156101ae576101ae61047e565b146101b857600080fd5b6000546001600160a01b031633146101cf57600080fd5b34600355600280546001600160a01b0384166001600160a81b03199091168117600160a01b17909155604080516318160ddd60e01b815290516318160ddd916004808201926020929091908290030181865afa158015610233573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025791906104e6565b6004556040517ff3a504f28a34fdf555994a3bdfd3dc29f822e8684a9ef01001afb738cc3cdd0a90600090a15050565b60025482906001600160a01b038083169116146102a357600080fd5b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303816000875af11580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a91906104ff565b50604051630852cd8d60e31b8152600481018390526001600160a01b038416906342966c6890602401600060405180830381600087803b15801561035d57600080fd5b505af1158015610371573d6000803e3d6000fd5b50506004543392506108fc9150610389908590610434565b6040518115909202916000818181858888f193505050501580156103b1573d6000803e3d6000fd5b50826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041491906104e6565b60000361042f576002805460ff60a01b1916600160a11b1790555b505050565b60006104408284610521565b9392505050565b80356001600160a01b038116811461045e57600080fd5b919050565b60006020828403121561047557600080fd5b61044082610447565b634e487b7160e01b600052602160045260246000fd5b60208101600383106104b657634e487b7160e01b600052602160045260246000fd5b91905290565b600080604083850312156104cf57600080fd5b6104d883610447565b946020939093013593505050565b6000602082840312156104f857600080fd5b5051919050565b60006020828403121561051157600080fd5b8151801515811461044057600080fd5b60008261053e57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220ff07b61a5eec6e16b293ae536cb19308bb62351fa73268bbcba2cd9de0c53c2064736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:994:24",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:24",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:24"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:24",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:24",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:24"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:24"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:24"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:24",
                "type": ""
              }
            ],
            "src": "14:177:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:171:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "349:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "352:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "304:52:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "365:50:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "405:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "375:29:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:40:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "365:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "424:35:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "444:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "455:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "440:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "440:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "434:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:25:24"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "424:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:24",
                "type": ""
              }
            ],
            "src": "196:269:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "571:76:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "581:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "593:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "604:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "589:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "589:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "581:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "623:9:24"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "634:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "616:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:25:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "616:25:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "540:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "551:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "562:4:24",
                "type": ""
              }
            ],
            "src": "470:177:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "733:127:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "779:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "788:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "791:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "781:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "781:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "781:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "754:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "763:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "750:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "750:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "775:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "746:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "743:52:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "804:50:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "844:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "814:29:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "814:40:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "804:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "699:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "710:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "722:6:24",
                "type": ""
              }
            ],
            "src": "652:208:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "897:95:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "914:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "921:3:24",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "926:10:24",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "917:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "917:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "907:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:31:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "907:31:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "954:1:24",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "957:4:24",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "947:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "947:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "947:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "978:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "981:4:24",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "971:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "971:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "971:15:24"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "865:127:24"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2806:24",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:24",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:24"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:24",
                "type": ""
              }
            ],
            "src": "14:177:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "245:124:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "255:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "277:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "264:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:20:24"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "255:5:24"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "347:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "356:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "359:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "349:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "349:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "349:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "306:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "317:5:24"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "332:3:24",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "337:1:24",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:3:24"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:11:24"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "341:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "324:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "324:19:24"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "313:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "313:31:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "303:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "303:42:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "296:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "296:50:24"
                  },
                  "nodeType": "YulIf",
                  "src": "293:70:24"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "224:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "235:5:24",
                "type": ""
              }
            ],
            "src": "196:173:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "444:116:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "490:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "499:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "502:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "492:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "492:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "492:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "465:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "474:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "461:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "461:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "486:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "457:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "454:52:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "515:39:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "544:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "525:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:29:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "515:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "410:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "421:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "433:6:24",
                "type": ""
              }
            ],
            "src": "374:186:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "666:102:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "676:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "688:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "699:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "684:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "676:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "718:9:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "733:6:24"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "749:3:24",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "754:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "745:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "745:11:24"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "758:1:24",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "741:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "741:19:24"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "729:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "729:32:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "711:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "711:51:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "711:51:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "635:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "646:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "657:4:24",
                "type": ""
              }
            ],
            "src": "565:203:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "890:102:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "900:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "912:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "908:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "900:4:24"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "942:9:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "957:6:24"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "973:3:24",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "978:1:24",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "969:3:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "969:11:24"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "982:1:24",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "965:3:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "965:19:24"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "953:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "953:32:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "935:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:51:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "935:51:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "859:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "870:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "881:4:24",
                "type": ""
              }
            ],
            "src": "773:219:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1029:95:24",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1046:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1053:3:24",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1058:10:24",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1049:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1049:20:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1039:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1039:31:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1039:31:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1086:1:24",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1089:4:24",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1079:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1079:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1079:15:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1110:1:24",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1113:4:24",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1103:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1103:15:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1103:15:24"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "997:127:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1243:229:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1253:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1265:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1261:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1253:4:24"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1321:111:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1342:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1349:3:24",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1354:10:24",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1345:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1345:20:24"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1335:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1335:31:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1335:31:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1386:1:24",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1389:4:24",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1379:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1379:15:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1379:15:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1414:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1417:4:24",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1407:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1407:15:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1407:15:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1301:6:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1309:1:24",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1298:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1298:13:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1291:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1291:21:24"
                  },
                  "nodeType": "YulIf",
                  "src": "1288:144:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1448:9:24"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1459:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1441:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1441:25:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1441:25:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_ClaimState_$3489__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1212:9:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1223:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1234:4:24",
                "type": ""
              }
            ],
            "src": "1129:343:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1564:167:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1610:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1619:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1622:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1612:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1612:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1612:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1585:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1594:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1581:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1581:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1606:2:24",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1577:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "1574:52:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1635:39:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1664:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1645:18:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:29:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1635:6:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1683:42:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1710:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1721:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1706:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1706:18:24"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1693:12:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1693:32:24"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1683:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1522:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1533:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1545:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1553:6:24",
                "type": ""
              }
            ],
            "src": "1477:254:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1817:103:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1863:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1872:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1875:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1865:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1865:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1865:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1838:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1847:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1834:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1834:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1859:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1830:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1830:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "1827:52:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1888:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1904:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1898:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1898:16:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1888:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1783:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1794:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1806:6:24",
                "type": ""
              }
            ],
            "src": "1736:184:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2082:218:24",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2092:26:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2104:9:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2115:2:24",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2100:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:18:24"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2092:4:24"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2127:29:24",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2145:3:24",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2150:1:24",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2141:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2141:11:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2154:1:24",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2137:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2137:19:24"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2131:2:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2172:9:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2187:6:24"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2195:2:24"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2183:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2183:15:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2165:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2165:34:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2165:34:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2219:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2230:2:24",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2215:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2215:18:24"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2239:6:24"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2247:2:24"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2235:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2235:15:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2208:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2208:43:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2208:43:24"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2271:9:24"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2282:2:24",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2267:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2267:18:24"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2287:6:24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2260:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2260:34:24"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2260:34:24"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2035:9:24",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2046:6:24",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2054:6:24",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2062:6:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2073:4:24",
                "type": ""
              }
            ],
            "src": "1925:375:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2383:199:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2429:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2438:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2441:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2431:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2431:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2431:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2404:7:24"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2413:9:24"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2400:3:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2400:23:24"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2425:2:24",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2396:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2396:32:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2393:52:24"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2454:29:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2473:9:24"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2467:5:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2467:16:24"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2458:5:24",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2536:16:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2545:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2548:1:24",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2538:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2538:12:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2538:12:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2505:5:24"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2526:5:24"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2519:6:24"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2519:13:24"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2512:6:24"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2512:21:24"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2502:2:24"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2502:32:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2495:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2495:40:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2492:60:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2561:15:24",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2571:5:24"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2561:6:24"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2349:9:24",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2360:7:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2372:6:24",
                "type": ""
              }
            ],
            "src": "2305:277:24"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2633:171:24",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2664:111:24",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2685:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2692:3:24",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2697:10:24",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2688:3:24"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2688:20:24"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2678:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2678:31:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2678:31:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2729:1:24",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2732:4:24",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2722:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2722:15:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2722:15:24"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2757:1:24",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2760:4:24",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2750:6:24"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2750:15:24"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2750:15:24"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2653:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2646:6:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2646:9:24"
                  },
                  "nodeType": "YulIf",
                  "src": "2643:132:24"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2784:14:24",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2793:1:24"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2796:1:24"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2789:3:24"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2789:9:24"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "2784:1:24"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2618:1:24",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2621:1:24",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "2627:1:24",
                "type": ""
              }
            ],
            "src": "2587:217:24"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_ClaimState_$3489__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
      "id": 24,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "358:2286:21:-:0;;;1268:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;901:37;;-1:-1:-1;;;901:37:21;;;;;616:25:24;;;1332:11:21;;1345:10;;1357:8;;1345:10;;-1:-1:-1;;;;;901:27:21;;;;;589:18:24;;901:37:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;901:54:21;;893:63;;;;;;1383:10:::1;:24:::0;;-1:-1:-1;;;;;1383:24:21;::::1;-1:-1:-1::0;;;;;;1383:24:21;;::::1;;::::0;;;:10:::1;1418:34:::0;;;;::::1;1441:10;1418:34;::::0;;1463:10:::1;:33:::0;;-1:-1:-1;;;;1463:33:21::1;-1:-1:-1::0;;;1383:10:21;1463:33:::1;;;;;1268:236:::0;;;;;358:2286;;14:177:24;93:13;;-1:-1:-1;;;;;135:31:24;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:269::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;455:2;444:9;440:18;434:25;424:35;;196:269;;;;;:::o;652:208::-;722:6;775:2;763:9;754:7;750:23;746:32;743:52;;;791:1;788;781:12;743:52;814:40;844:9;814:40;:::i;:::-;804:50;652:208;-1:-1:-1;;;652:208:24:o;865:127::-;358:2286:21;;;;;;",
  "deployedSourceMap": "358:2286:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;649:21;;;;;;;;;;;;;;;;;;;160:25:24;;;148:2;133:18;649:21:21;;;;;;;;1512:547;;;;;;:::i;:::-;;:::i;:::-;;469:25;;;;;;;;;;-1:-1:-1;469:25:21;;;;-1:-1:-1;;;;;469:25:21;;;;;;-1:-1:-1;;;;;729:32:24;;;711:51;;699:2;684:18;469:25:21;565:203:24;427:35:21;;;;;;;;;;-1:-1:-1;427:35:21;;;;-1:-1:-1;;;;;427:35:21;;;587:28;;;;;;;;;;-1:-1:-1;587:28:21;;;;-1:-1:-1;;;587:28:21;;;;;;;;;;;;;:::i;501:27::-;;;;;;;;;;-1:-1:-1;501:27:21;;;;-1:-1:-1;;;;;501:27:21;;;2067:574;;;;;;:::i;:::-;;:::i;622:20::-;;;;;;;;;;;;;;;;1512:547;1570:20;;1115:10;;;-1:-1:-1;;;1115:10:21;;;;;:20;;;;;;;:::i;:::-;;1107:29;;;;;;1029:12:::1;::::0;-1:-1:-1;;;;;1029:12:21::1;1015:10;:26;1007:35;;;::::0;::::1;;1626:9:::2;1618:5;:17:::0;1735:12:::2;:21:::0;;-1:-1:-1;;;;;1735:21:21;::::2;-1:-1:-1::0;;;;;;1840:33:21;;;;;-1:-1:-1;;;1840:33:21::2;::::0;;;1952:27:::2;::::0;;-1:-1:-1;;;1952:27:21;;;;:25:::2;::::0;:27:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;1735:21;1952:27:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1943:6;:36:::0;2043:8:::2;::::0;::::2;::::0;;;::::2;1512:547:::0;;:::o;2067:574::-;1227:12;;2143:6;;-1:-1:-1;;;;;1217:22:21;;;1227:12;;1217:22;1209:31;;;;;;2167:62:::1;::::0;-1:-1:-1;;;2167:62:21;;2194:10:::1;2167:62;::::0;::::1;2165:34:24::0;2214:4:21::1;2215:18:24::0;;;2208:43;2267:18;;;2260:34;;;-1:-1:-1;;;;;2167:26:21;::::1;::::0;::::1;::::0;2100:18:24;;2167:62:21::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2265:36:21::1;::::0;-1:-1:-1;;;2265:36:21;;::::1;::::0;::::1;160:25:24::0;;;-1:-1:-1;;;;;2265:26:21;::::1;::::0;::::1;::::0;133:18:24;;2265:36:21::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2419:6:21::1;::::0;2384:10:::1;::::0;-1:-1:-1;2376:51:21::1;::::0;-1:-1:-1;2405:21:21::1;::::0;2406:7;;2405:13:::1;:21::i;:::-;2376:51;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2550:6;-1:-1:-1::0;;;;;2544:25:21::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2575:1;2544:32:::0;2540:94:::1;;2605:17;2592:30:::0;;-1:-1:-1;;;;2592:30:21::1;-1:-1:-1::0;;;2592:30:21::1;::::0;;2540:94:::1;2067:574:::0;;;:::o;3850:96:20:-;3908:7;3934:5;3938:1;3934;:5;:::i;:::-;3927:12;3850:96;-1:-1:-1;;;3850:96:20:o;196:173:24:-;264:20;;-1:-1:-1;;;;;313:31:24;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;997:127::-;1058:10;1053:3;1049:20;1046:1;1039:31;1089:4;1086:1;1079:15;1113:4;1110:1;1103:15;1129:343;1276:2;1261:18;;1309:1;1298:13;;1288:144;;1354:10;1349:3;1345:20;1342:1;1335:31;1389:4;1386:1;1379:15;1417:4;1414:1;1407:15;1288:144;1441:25;;;1129:343;:::o;1477:254::-;1545:6;1553;1606:2;1594:9;1585:7;1581:23;1577:32;1574:52;;;1622:1;1619;1612:12;1574:52;1645:29;1664:9;1645:29;:::i;:::-;1635:39;1721:2;1706:18;;;;1693:32;;-1:-1:-1;;;1477:254:24:o;1736:184::-;1806:6;1859:2;1847:9;1838:7;1834:23;1830:32;1827:52;;;1875:1;1872;1865:12;1827:52;-1:-1:-1;1898:16:24;;1736:184;-1:-1:-1;1736:184:24:o;2305:277::-;2372:6;2425:2;2413:9;2404:7;2400:23;2396:32;2393:52;;;2441:1;2438;2431:12;2393:52;2473:9;2467:16;2526:5;2519:13;2512:21;2505:5;2502:32;2492:60;;2548:1;2545;2538:12;2587:217;2627:1;2653;2643:132;;2697:10;2692:3;2688:20;2685:1;2678:31;2732:4;2729:1;2722:15;2760:4;2757:1;2750:15;2643:132;-1:-1:-1;2789:9:24;;2587:217::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.2;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\"; // Used for Division operation of integers\r\n\r\ncontract FractionalClaim {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    address payable public ownerAddress;\r\n    address public nftAddress;\r\n    address public tokenAddress;\r\n    enum ClaimState {initiated, accepting, closed}\r\n    ClaimState public claimState;\r\n    uint256 public funds;\r\n    uint256 public supply;\r\n\r\n    event funded();\r\n\r\n    //this claims contract should only be allowed if the guy who started it owns this NFT token\r\n    modifier isOwnerOfNFT(address _nftAddress, address _ownerAddress, uint256 _tokenID){\r\n        require(ERC721(_nftAddress).ownerOf(_tokenID) == _ownerAddress);\r\n        _;\r\n    }\r\n\r\n\tmodifier onlyOwner() {\r\n\t\trequire(msg.sender == ownerAddress);\r\n\t\t_;\r\n\t}\r\n\r\n    modifier inClaimState(ClaimState _state) {\r\n\t\trequire(claimState == _state);\r\n\t\t_;\r\n\t}\r\n\r\n    modifier correctToken(address _token)\r\n    {\r\n        require(_token == tokenAddress);\r\n        _;\r\n    }\r\n\r\n    constructor(address _nftAddress, uint256 _tokenID) isOwnerOfNFT(_nftAddress, msg.sender, _tokenID)\r\n    {\r\n        nftAddress = _nftAddress;\r\n        ownerAddress = payable(msg.sender);\r\n        claimState = ClaimState.initiated;\r\n    }\r\n\r\n    function fund(address _token) public payable inClaimState(ClaimState.initiated) onlyOwner\r\n    {\r\n        funds = msg.value;                                                //amount added to allow claims to be made\r\n        tokenAddress = _token;                                            //address of acceptable token\r\n        claimState = ClaimState.accepting;                                //set to accepting status\r\n\r\n        supply = ERC20(_token).totalSupply();    //find out how many tokens are out there\r\n  \r\n        emit funded();\r\n    }\r\n\r\n    function claim(address _token, uint256 _amount) public payable correctToken(_token)\r\n    {\r\n        ERC20(_token).transferFrom(msg.sender, address(this), _amount); //collect the token back\r\n        ERC20Burnable(_token).burn( _amount);                                   //claimed, so burn this token\r\n        payable(msg.sender).transfer((_amount).div(supply));                    //send the ETH to the claimant\r\n\r\n        //ok, fully claimed. Close this contract\r\n        if (ERC20(_token).totalSupply() == 0){\r\n            claimState = ClaimState.closed;\r\n        }\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\v-racharya\\Desktop\\Real-Estate-FNFT\\blockchain\\contracts\\FractionalClaim.sol",
  "ast": {
    "absolutePath": "project:/contracts/FractionalClaim.sol",
    "exportedSymbols": {
      "Address": [
        2800
      ],
      "Context": [
        2822
      ],
      "ERC165": [
        3146
      ],
      "ERC20": [
        806
      ],
      "ERC20Burnable": [
        928
      ],
      "ERC721": [
        1820
      ],
      "FractionalClaim": [
        3682
      ],
      "IERC165": [
        3158
      ],
      "IERC20": [
        884
      ],
      "IERC20Metadata": [
        953
      ],
      "IERC721": [
        1936
      ],
      "IERC721Metadata": [
        2505
      ],
      "IERC721Receiver": [
        1954
      ],
      "SafeMath": [
        3470
      ],
      "Strings": [
        3122
      ]
    },
    "id": 3683,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3472,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:21"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3473,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 1821,
        "src": "62:57:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3474,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 807,
        "src": "121:55:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 3475,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 929,
        "src": "178:74:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3476,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3683,
        "sourceUnit": 3471,
        "src": "254:57:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FractionalClaim",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3682,
        "linearizedBaseContracts": [
          3682
        ],
        "name": "FractionalClaim",
        "nameLocation": "367:15:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 3479,
            "libraryName": {
              "id": 3477,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3470,
              "src": "398:8:21"
            },
            "nodeType": "UsingForDirective",
            "src": "392:27:21",
            "typeName": {
              "id": 3478,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "411:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "8f84aa09",
            "id": 3481,
            "mutability": "mutable",
            "name": "ownerAddress",
            "nameLocation": "450:12:21",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "427:35:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3480,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "427:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5bf8633a",
            "id": 3483,
            "mutability": "mutable",
            "name": "nftAddress",
            "nameLocation": "484:10:21",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "469:25:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3482,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "469:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d76ea58",
            "id": 3485,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nameLocation": "516:12:21",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "501:27:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3484,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "501:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalClaim.ClaimState",
            "id": 3489,
            "members": [
              {
                "id": 3486,
                "name": "initiated",
                "nameLocation": "552:9:21",
                "nodeType": "EnumValue",
                "src": "552:9:21"
              },
              {
                "id": 3487,
                "name": "accepting",
                "nameLocation": "563:9:21",
                "nodeType": "EnumValue",
                "src": "563:9:21"
              },
              {
                "id": 3488,
                "name": "closed",
                "nameLocation": "574:6:21",
                "nodeType": "EnumValue",
                "src": "574:6:21"
              }
            ],
            "name": "ClaimState",
            "nameLocation": "540:10:21",
            "nodeType": "EnumDefinition",
            "src": "535:46:21"
          },
          {
            "constant": false,
            "functionSelector": "9a725809",
            "id": 3492,
            "mutability": "mutable",
            "name": "claimState",
            "nameLocation": "605:10:21",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "587:28:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ClaimState_$3489",
              "typeString": "enum FractionalClaim.ClaimState"
            },
            "typeName": {
              "id": 3491,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3490,
                "name": "ClaimState",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3489,
                "src": "587:10:21"
              },
              "referencedDeclaration": 3489,
              "src": "587:10:21",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ClaimState_$3489",
                "typeString": "enum FractionalClaim.ClaimState"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c89f2ce4",
            "id": 3494,
            "mutability": "mutable",
            "name": "funds",
            "nameLocation": "637:5:21",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "622:20:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3493,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "622:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "047fc9aa",
            "id": 3496,
            "mutability": "mutable",
            "name": "supply",
            "nameLocation": "664:6:21",
            "nodeType": "VariableDeclaration",
            "scope": 3682,
            "src": "649:21:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3495,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "649:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "f3a504f28a34fdf555994a3bdfd3dc29f822e8684a9ef01001afb738cc3cdd0a",
            "id": 3498,
            "name": "funded",
            "nameLocation": "685:6:21",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:21"
            },
            "src": "679:15:21"
          },
          {
            "body": {
              "id": 3518,
              "nodeType": "Block",
              "src": "882:94:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3511,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3504,
                              "src": "929:8:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3508,
                                  "name": "_nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3500,
                                  "src": "908:11:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3507,
                                "name": "ERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1820,
                                "src": "901:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC721_$1820_$",
                                  "typeString": "type(contract ERC721)"
                                }
                              },
                              "id": 3509,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "901:19:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1820",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 3510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1099,
                            "src": "901:27:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 3512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "901:37:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3513,
                          "name": "_ownerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3502,
                          "src": "942:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "901:54:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "893:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "893:63:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3516,
                  "nodeType": "ExpressionStatement",
                  "src": "893:63:21"
                },
                {
                  "id": 3517,
                  "nodeType": "PlaceholderStatement",
                  "src": "967:1:21"
                }
              ]
            },
            "id": 3519,
            "name": "isOwnerOfNFT",
            "nameLocation": "808:12:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3500,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "829:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3519,
                  "src": "821:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "821:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3502,
                  "mutability": "mutable",
                  "name": "_ownerAddress",
                  "nameLocation": "850:13:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3519,
                  "src": "842:21:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3504,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "873:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3519,
                  "src": "865:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "865:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "820:62:21"
            },
            "src": "799:177:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3529,
              "nodeType": "Block",
              "src": "1002:51:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3522,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1015:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1015:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3524,
                          "name": "ownerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3481,
                          "src": "1029:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1015:26:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3521,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1007:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1007:35:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3527,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:35:21"
                },
                {
                  "id": 3528,
                  "nodeType": "PlaceholderStatement",
                  "src": "1047:1:21"
                }
              ]
            },
            "id": 3530,
            "name": "onlyOwner",
            "nameLocation": "990:9:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "999:2:21"
            },
            "src": "981:72:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3542,
              "nodeType": "Block",
              "src": "1102:45:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ClaimState_$3489",
                          "typeString": "enum FractionalClaim.ClaimState"
                        },
                        "id": 3538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3536,
                          "name": "claimState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3492,
                          "src": "1115:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimState_$3489",
                            "typeString": "enum FractionalClaim.ClaimState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3537,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3533,
                          "src": "1129:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimState_$3489",
                            "typeString": "enum FractionalClaim.ClaimState"
                          }
                        },
                        "src": "1115:20:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3535,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1107:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1107:29:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3540,
                  "nodeType": "ExpressionStatement",
                  "src": "1107:29:21"
                },
                {
                  "id": 3541,
                  "nodeType": "PlaceholderStatement",
                  "src": "1141:1:21"
                }
              ]
            },
            "id": 3543,
            "name": "inClaimState",
            "nameLocation": "1070:12:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3533,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "1094:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3543,
                  "src": "1083:17:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ClaimState_$3489",
                    "typeString": "enum FractionalClaim.ClaimState"
                  },
                  "typeName": {
                    "id": 3532,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3531,
                      "name": "ClaimState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3489,
                      "src": "1083:10:21"
                    },
                    "referencedDeclaration": 3489,
                    "src": "1083:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClaimState_$3489",
                      "typeString": "enum FractionalClaim.ClaimState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1082:19:21"
            },
            "src": "1061:86:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3554,
              "nodeType": "Block",
              "src": "1198:62:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3548,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3545,
                          "src": "1217:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3549,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3485,
                          "src": "1227:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1217:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1209:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1209:31:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3552,
                  "nodeType": "ExpressionStatement",
                  "src": "1209:31:21"
                },
                {
                  "id": 3553,
                  "nodeType": "PlaceholderStatement",
                  "src": "1251:1:21"
                }
              ]
            },
            "id": 3555,
            "name": "correctToken",
            "nameLocation": "1164:12:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3546,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3545,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1185:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3555,
                  "src": "1177:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3544,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1177:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1176:16:21"
            },
            "src": "1155:105:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3585,
              "nodeType": "Block",
              "src": "1372:132:21",
              "statements": [
                {
                  "expression": {
                    "id": 3570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3568,
                      "name": "nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3483,
                      "src": "1383:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3569,
                      "name": "_nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3557,
                      "src": "1396:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1383:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3571,
                  "nodeType": "ExpressionStatement",
                  "src": "1383:24:21"
                },
                {
                  "expression": {
                    "id": 3578,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3572,
                      "name": "ownerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3481,
                      "src": "1418:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3575,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1441:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3576,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1441:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1433:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 3573,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1433:8:21",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3577,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1433:19:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1418:34:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3579,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:34:21"
                },
                {
                  "expression": {
                    "id": 3583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3580,
                      "name": "claimState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3492,
                      "src": "1463:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimState_$3489",
                        "typeString": "enum FractionalClaim.ClaimState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3581,
                        "name": "ClaimState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3489,
                        "src": "1476:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ClaimState_$3489_$",
                          "typeString": "type(enum FractionalClaim.ClaimState)"
                        }
                      },
                      "id": 3582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "initiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3486,
                      "src": "1476:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimState_$3489",
                        "typeString": "enum FractionalClaim.ClaimState"
                      }
                    },
                    "src": "1463:33:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClaimState_$3489",
                      "typeString": "enum FractionalClaim.ClaimState"
                    }
                  },
                  "id": 3584,
                  "nodeType": "ExpressionStatement",
                  "src": "1463:33:21"
                }
              ]
            },
            "id": 3586,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3562,
                    "name": "_nftAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3557,
                    "src": "1332:11:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "expression": {
                      "id": 3563,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1345:3:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1345:10:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 3565,
                    "name": "_tokenID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3559,
                    "src": "1357:8:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3566,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3561,
                  "name": "isOwnerOfNFT",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3519,
                  "src": "1319:12:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1319:47:21"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3560,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3557,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "1288:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3586,
                  "src": "1280:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3556,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1280:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3559,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "1309:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3586,
                  "src": "1301:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3558,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1279:39:21"
            },
            "returnParameters": {
              "id": 3567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1372:0:21"
            },
            "scope": 3682,
            "src": "1268:236:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3622,
              "nodeType": "Block",
              "src": "1607:452:21",
              "statements": [
                {
                  "expression": {
                    "id": 3600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3597,
                      "name": "funds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3494,
                      "src": "1618:5:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3598,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1626:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1626:9:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1618:17:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3601,
                  "nodeType": "ExpressionStatement",
                  "src": "1618:17:21"
                },
                {
                  "expression": {
                    "id": 3604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3602,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3485,
                      "src": "1735:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3603,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3588,
                      "src": "1750:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1735:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3605,
                  "nodeType": "ExpressionStatement",
                  "src": "1735:21:21"
                },
                {
                  "expression": {
                    "id": 3609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3606,
                      "name": "claimState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3492,
                      "src": "1840:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimState_$3489",
                        "typeString": "enum FractionalClaim.ClaimState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3607,
                        "name": "ClaimState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3489,
                        "src": "1853:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ClaimState_$3489_$",
                          "typeString": "type(enum FractionalClaim.ClaimState)"
                        }
                      },
                      "id": 3608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "accepting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3487,
                      "src": "1853:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimState_$3489",
                        "typeString": "enum FractionalClaim.ClaimState"
                      }
                    },
                    "src": "1840:33:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClaimState_$3489",
                      "typeString": "enum FractionalClaim.ClaimState"
                    }
                  },
                  "id": 3610,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:33:21"
                },
                {
                  "expression": {
                    "id": 3617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3611,
                      "name": "supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3496,
                      "src": "1943:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3613,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3588,
                              "src": "1958:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3612,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "1952:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$806_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 3614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1952:13:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$806",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 3615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 305,
                        "src": "1952:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 3616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1952:27:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1943:36:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3618,
                  "nodeType": "ExpressionStatement",
                  "src": "1943:36:21"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 3619,
                      "name": "funded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3498,
                      "src": "2043:6:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 3620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2043:8:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3621,
                  "nodeType": "EmitStatement",
                  "src": "2038:13:21"
                }
              ]
            },
            "functionSelector": "23024408",
            "id": 3623,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3591,
                      "name": "ClaimState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3489,
                      "src": "1570:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ClaimState_$3489_$",
                        "typeString": "type(enum FractionalClaim.ClaimState)"
                      }
                    },
                    "id": 3592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "initiated",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3486,
                    "src": "1570:20:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClaimState_$3489",
                      "typeString": "enum FractionalClaim.ClaimState"
                    }
                  }
                ],
                "id": 3593,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3590,
                  "name": "inClaimState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3543,
                  "src": "1557:12:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1557:34:21"
              },
              {
                "id": 3595,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3594,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3530,
                  "src": "1592:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1592:9:21"
              }
            ],
            "name": "fund",
            "nameLocation": "1521:4:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3588,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1534:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3623,
                  "src": "1526:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1525:16:21"
            },
            "returnParameters": {
              "id": 3596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1607:0:21"
            },
            "scope": 3682,
            "src": "1512:547:21",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3680,
              "nodeType": "Block",
              "src": "2156:485:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3637,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2194:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2194:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3641,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2214:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalClaim_$3682",
                              "typeString": "contract FractionalClaim"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalClaim_$3682",
                              "typeString": "contract FractionalClaim"
                            }
                          ],
                          "id": 3640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2206:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3639,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2206:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2206:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3643,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3627,
                        "src": "2221:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3634,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3625,
                            "src": "2173:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3633,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 806,
                          "src": "2167:5:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$806_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 3635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2167:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 3636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 420,
                      "src": "2167:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 3644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2167:62:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3645,
                  "nodeType": "ExpressionStatement",
                  "src": "2167:62:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3650,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3627,
                        "src": "2293:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3647,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3625,
                            "src": "2279:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3646,
                          "name": "ERC20Burnable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 928,
                          "src": "2265:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$928_$",
                            "typeString": "type(contract ERC20Burnable)"
                          }
                        },
                        "id": 3648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2265:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$928",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "id": 3649,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 906,
                      "src": "2265:26:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 3651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2265:36:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3652,
                  "nodeType": "ExpressionStatement",
                  "src": "2265:36:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3662,
                            "name": "supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3496,
                            "src": "2419:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "components": [
                              {
                                "id": 3659,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3627,
                                "src": "2406:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 3660,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2405:9:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 3661,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3379,
                          "src": "2405:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 3663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2405:21:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 3655,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2384:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2384:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2376:8:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 3653,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2376:8:21",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2376:19:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2376:28:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2376:51:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3665,
                  "nodeType": "ExpressionStatement",
                  "src": "2376:51:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 3667,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3625,
                              "src": "2550:6:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 3666,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "2544:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$806_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 3668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2544:13:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$806",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 3669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "totalSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 305,
                        "src": "2544:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 3670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2544:27:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 3671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2575:1:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2544:32:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3679,
                  "nodeType": "IfStatement",
                  "src": "2540:94:21",
                  "trueBody": {
                    "id": 3678,
                    "nodeType": "Block",
                    "src": "2577:57:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3673,
                            "name": "claimState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3492,
                            "src": "2592:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ClaimState_$3489",
                              "typeString": "enum FractionalClaim.ClaimState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3674,
                              "name": "ClaimState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3489,
                              "src": "2605:10:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ClaimState_$3489_$",
                                "typeString": "type(enum FractionalClaim.ClaimState)"
                              }
                            },
                            "id": 3675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "closed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3488,
                            "src": "2605:17:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ClaimState_$3489",
                              "typeString": "enum FractionalClaim.ClaimState"
                            }
                          },
                          "src": "2592:30:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimState_$3489",
                            "typeString": "enum FractionalClaim.ClaimState"
                          }
                        },
                        "id": 3677,
                        "nodeType": "ExpressionStatement",
                        "src": "2592:30:21"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "aad3ec96",
            "id": 3681,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3630,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3625,
                    "src": "2143:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 3631,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3629,
                  "name": "correctToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3555,
                  "src": "2130:12:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2130:20:21"
              }
            ],
            "name": "claim",
            "nameLocation": "2076:5:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3625,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2090:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3681,
                  "src": "2082:14:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3627,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2106:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3681,
                  "src": "2098:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2098:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2081:33:21"
            },
            "returnParameters": {
              "id": 3632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2156:0:21"
            },
            "scope": 3682,
            "src": "2067:574:21",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3683,
        "src": "358:2286:21",
        "usedErrors": []
      }
    ],
    "src": "35:2609:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-07-16T15:51:45.570Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}